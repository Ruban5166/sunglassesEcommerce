<%- include('../layouts.ejs')%>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/normalize/5.0.0/normalize.min.css">
<link rel='stylesheet' href='https://cdnjs.cloudflare.com/ajax/libs/cropper/2.3.4/cropper.min.css'>
<style>
  body{
    position: relative;
}

/* user side image previewer */

#imagePreview img{
    height: 50px;
    max-width: 80px;
}

#cropper110Modal{
    position: absolute;
    width: 100vw;
    height: 100vh;
    background-color: rgba(53, 52, 52, 0.532);
    display: flex;
    justify-content: center;
    align-items: center;
    display: none;
}

#cropper110Modal img {
	max-width: 100%;
}

.cropper110-page {
	margin: 1em auto;
	max-width: 768px;
	height: 100%;
}

.cropper110-box {
	padding: 0.5em;
	width: calc(100%/2 - 1em);
    max-height: 60vh;
}



.cropper110-crop , .cropper110-close {
    padding: .5rem 1rem;
    background-color: rgb(0,0,0);
    color: #fff;
    font-weight: bold;
}

.cropper110-close{
    background-color: red;
}






</style>

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.css" integrity="sha512-jNfFzo3nL4+lhTzg7O3Kjiz5Or6/UVn8AsYh8e/x5XVtF+kagC2qeD+30zVBr86vmdJAN9YH5NpKblX4dzt5Xg==" crossorigin="anonymous" referrerpolicy="no-referrer" />

<div class="container-fluid p-0 min-vh-100" style="margin-top: 10%">
  <%- include('../partials/adminheader.ejs') %>

  <div class="container">
    <div class="row">
      <div
        class="col-md-6 mx-auto"
        style="
          background-color: rgb(60, 89, 177);
          border: 2px solid rgb(77, 80, 248);
          border-radius: 15px;
          height: 480px;
          box-shadow: rgba(50, 50, 93, 0.25) 0px 50px 100px -20px,
            rgba(0, 0, 0, 0.3) 0px 30px 60px -30px,
            rgba(10, 37, 64, 0.35) 0px -2px 6px 0px inset;
          color: whitesmoke;
        "
      >
        <!-- Center the form on medium screens -->
        <h2 class="text-center" id="pro-addheader">Add Products</h2>
        <% if (locals.msg) { %>
        <div class="alert alert-success">
          <strong><%= msg %> </strong>
        </div>
        <% } %>
        <p class="text-center text-success"><%= msg %></p>
        <p class="text-success text-center"></p>
        <form
          action="/admin/add-product"
          method="post"
          enctype="multipart/form-data"
          onsubmit="return validateForm()"
          id="add-pro"
        >
          <div class="row">
            <div class="col-md-6">
              <div class="mb-3">
                <label for="name">Name</label>
                <input type="text" name="name" id="name" class="form-control" />
                <div id="name-error-messages" class="text-danger"></div>
              </div>
            </div>
            <div class="col-md-6">
              <div class="mb-3">
                <label for="category">Category</label>
                <select
                  class="form-select"
                  name="category"
                  id="category"
                  aria-label="Default select example"
                >
                  <% cateData.forEach((category) => { %>
                  <option value="<%= category.categoryName %> ">
                    <%= category.categoryName %>
                  </option>
                  <% }) %>
                </select>
                <div id="category-error-messages" class="text-danger"></div>
              </div>
            </div>
          </div>

          <div class="row">
            <div class="col-md-6">
              <div class="mb-3">
                <label for="originalprice">Price</label>
                <input
                  type="number"
                  name="originalprice"
                  id="originalprice"
                  class="form-control"
                />
                <div id="price-error-messages" class="text-danger"></div>
              </div>
            </div>

            <div class="col-md-6">
              <div class="mb-3">
                <label for="offers">Offers</label>
                <input
                  type="number"
                  name="offers"
                  id="offers"
                  class="form-control"
                />
                <div id="offers-error-messages" class="text-danger"></div>
              </div>
            </div>
          </div>

          <div class="row">
            <div class="mb-3 col-md-6">
              <label for="quantity">Quantity</label>
              <input
                type="number"
                name="quantity"
                id="quantity"
                class="form-control"
              />
              <div id="quantity-error-messages" class="text-danger"></div>
            </div>

            <div class="mb-3 col-md-6">
              <label for="discription">Description</label>
              <input
                type="text"
                name="discription"
                id="discription"
                class="form-control"
              />
              <div id="discription-error-messages" class="text-danger"></div>
            </div>
          </div>

          <div class="mb-3">
            <label for="image">Image</label>
            
            <input
              type="file"
              name="image"
              id="fileUploader"
              data-image-preview="#imagePreview"
              accept=".jpg,.png,.jpeg"
              class="form-control"
              multiple
              
            />
            <div id="imagePreview"></div>
          </div>
         
          
          <div class="text-center">
            <button type="submit" class="btn btn-success mt-4">Submit</button>
          </div>
        </form>
        <div id="cropper110Modal">
          <div id="imageCropBox">
              <div style="text-align: end;">
                  <button class="cropper110-close">close</button>
              </div>
              <section class="cropper110-page">
                  <div class="cropper110-box">
                      <div class="cropper110-cropping-box"></div>
                  </div>
  
                  <div>
                      <button class="cropper110-crop mx-3">Crop</button>
                  </div>
              </section>
          </div>
      </div>
      </div>
      
    </div>
  </div>
</div>



<script>
  function validateForm() {
    const name = document.getElementById("name").value;
    const category = document.getElementById("category").value;
    const originalprice = document.getElementById("originalprice").value;
    const offers = document.getElementById("offers").value;
    const quantity = document.getElementById("quantity").value;
    const discription = document.getElementById("discription").value;
    const image = document.getElementById("formFileMultiple").files[0];

    // const errorMessages = document.getElementById("error-messages");
    // errorMessages.innerHTML = ""; // Clear previous error messages
    const e_name = document.getElementById("name-error-messages");
    const e_category = document.getElementById("category-error-messages");
    const e_price = document.getElementById("price-error-messages");
    const e_offers = document.getElementById("offers-error-messages");
    const e_quantity = document.getElementById("quantity-error-messages");
    const e_discription = document.getElementById("discription-error-messages");
    const e_image = document.getElementById("image-error-messages");

    let isValid = true;

    // Validation for Name, Category, Price, Offers, Quantity, and Description
    if (name.trim() === "") {
      e_name.innerHTML = "Name is required.";
      // appendErrorMessage("Name is required.");
      // isValid = false;
    } else if (name.trim().length < 5) {
      e_name.innerHTML = "Name must be at least 3 characters.";
      // appendErrorMessage("Name must be at least 3 characters.");
      // isValid = false;
    } else if (name.trim().length) {
      e_name.innerHTML = " ";
    }

    if (category.trim() === " ") {
      // appendErrorMessage("Category is required.");
      e_category.innerHTML = "Category is required.";
      isValid = false;
    }

    if (originalprice.trim() === "") {
      // appendErrorMessage("Price is required.");
      e_price.innerHTML = "Price is required.";
      isValid = false;
    } else if (originalprice.trim().length) {
      e_price.innerHTML = " ";
    }

    if (offers.trim() === "") {
      // appendErrorMessage("Offers is required.");
      e_offers.innerHTML = "Offers is required.";
      isValid = false;
    } else if (offers.trim().length) {
      e_offers.innerHTML = " ";
    }

    if (quantity.trim() === "") {
      // appendErrorMessage("Quantity is required.");
      e_quantity.innerHTML = "Quantity is required.";
      isValid = false;
    } else if (quantity.trim().length) {
      e_quantity.innerHTML = " ";
    }

    if (discription.trim() === "") {
      // appendErrorMessage("Description is required.");
      e_discription.innerHTML = "Description is required.";
      isValid = false;
    } else if (discription.trim().length < 10) {
      e_discription.innerHTML = "Description at least 10 characters.";
      isValid = false;
    } else if (discription.trim().length) {
      e_discription.innerHTML = " ";
    }

    // Image validation
    if (image) {
      const allowedExtensions = ["jpg", "png", "jpeg"];
      const maxSize = 5 * 1024 * 1024; // 5 MB

      const fileName = image.name.toLowerCase();
      const fileExtension = fileName.split(".").pop();

      if (!allowedExtensions.includes(fileExtension)) {
        // appendErrorMessage("Image must be in jpg, png, or jpeg format.");
        e_image.innerHTML = "Image must be in jpg, png, or jpeg format.";
        isValid = false;
      }

      if (image.size > maxSize) {
        // appendErrorMessage("Image size exceeds 5 MB.");
        e_image.innerHTML = "Image size exceeds 5 MB.";
        isValid = false;
      }
    }

    return isValid;
  }

  // function appendErrorMessage(message) {
  //     const errorMessages = document.getElementById("error-messages");
  //     const errorMessageElement = document.createElement("div");
  //     errorMessageElement.innerText = message;
  //     errorMessages.appendChild(errorMessageElement);
  // }
</script>
<script src='https://cdnjs.cloudflare.com/ajax/libs/cropperjs/0.8.1/cropper.min.js'></script>
<script>
  let fileInputs = document.querySelectorAll('[data-image-preview]')


let croppingBox = document.querySelector('.cropper110-cropping-box'),
    crop = document.querySelector('.cropper110-crop'),
    cropper = '',
    currentInput = null,
    imgNames = null,
    imgSrc = null;

fileInputs.forEach(fileInput => {
    fileInput.addEventListener('change', () => {
        let previewDiv = document.querySelector(fileInput.dataset.imagePreview)
        previewDiv.innerHTML = ""
        for (let each of fileInput.files) {
            let imgSrc = URL.createObjectURL(each)
            let img = document.createElement('img')
            img.src = imgSrc
            img.dataset.fileName = each.name
            console.log(fileInput.id, 'file inut id')
            img.dataset.input = fileInput.id
            img.addEventListener('click', cropImage)

            previewDiv.append(img)

        }
    })
})


function cropImage(e) {
    
    document.getElementById('cropper110Modal').style.display = 'flex'

    let img = document.createElement('img');
    img.id = 'image';
    img.src = e.target.src;
    croppingBox.innerHTML = '';
    croppingBox.appendChild(img);
    cropper = new Cropper(img);

    imgNames = e.target.dataset.fileName
    currentInput = e.target.dataset.input

}



//crop and save on click
crop.addEventListener('click', e => {
    e.preventDefault();
    // get result to data uri

    let imgSrc = cropper.getCroppedCanvas({
        width: 300 // input value
    }).toDataURL();

    if (imgSrc && imgNames !== null) {
        let fileUploader = document.getElementById(currentInput)
        fetch(imgSrc)
            .then(res => res.blob())
            .then(blob => {
                console.log(imgNames)
                let file = new File([blob], `${imgNames}-${Date.now()}.png`, { type: "image/jpeg" })

                const dt = new DataTransfer()
                for (let each of fileUploader.files) {
                    if (each.name !== imgNames) {
                        dt.items.add(each)
                    } else {
                        dt.items.add(file)
                    }
                }


                fileUploader.files = dt.files

                console.log(fileUploader.files)

                let previewDiv = document.querySelector(fileUploader.dataset.imagePreview)
                previewDiv.innerHTML = ""
                let res = ""

                for (let each of fileUploader.files) {
                    let src = URL.createObjectURL(each)
                    res += `<img src="${src}" data-file-name="${each.name}" data-input="${fileUploader.id}" onclick="cropImage(event)" class="previewImages">`
                }

                previewDiv.innerHTML = res


            })
    }

    document.querySelector('.cropper110-close').click()
});

document.querySelector('.cropper110-close')
    .addEventListener('click', () => {
        document.getElementById('cropper110Modal').style.display = 'none'
    })

</script>




